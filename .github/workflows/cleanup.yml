# This workflow builds multiple versions of the s0ck3t binary

name: CI

# Controls when the action will run. 
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  #schedule:
  #  - cron: '37 13 * * 4'

# Set up the docker base info
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-x64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/delete-package-versions@v5
        with:
          # Can be a single package version id, or a comma separated list of package version ids.
          # Defaults to an empty string.
          #package-version-ids:

          # Owner of the package.
          # Defaults to the owner of the repo executing the workflow.
          # Required if deleting a version from a package hosted in a different org than the one executing the workflow.
          #owner:

          # Name of the package.
          # Required
          #package-name:

          # Type of the package. Can be one of container, maven, npm, nuget, or rubygems.
          # Required
          #package-type:

          # The number of old versions to delete starting from the oldest version.
          # Defaults to 1.
          #num-old-versions-to-delete:

          # The number of latest versions to keep.
          # This cannot be specified with `num-old-versions-to-delete`. By default, `min-versions-to-keep` takes precedence over `num-old-versions-to-delete`.
          # When set to 0, all deletable versions will be deleted.
          # When set greater than 0, all deletable package versions except the specified number will be deleted.
          #min-versions-to-keep: 

          # The package versions to exclude from deletion.
          # Takes regex for the version name as input.
          # By default nothing is ignored. This is ignored when `delete-only-pre-release-versions` is true
          ignore-versions: "^(([A-Z]+-\\d+_)+[a-z0-9+_]+|main|master|develop|dev|latest|(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?)(-linux-(arm64|amd64))?$"

          # If true it will delete only the pre-release versions.
          # The number of pre-release versions to keep can be set by using `min-versions-to-keep` value with this.
          # When `min-versions-to-keep` is 0, all pre-release versions get deleted.
          # Defaults to false.
          # Cannot be used with `num-old-versions-to-delete` and `ignore-versions`.
          #delete-only-pre-release-versions:

          # If true it will delete only the untagged versions in case of container package.
          # Does not work for other package types and will be ignored.
          # The number of untagged versions to keep can be set by using `min-versions-to-keep` value with this.
          # When `min-versions-to-keep` is 0, all untagged versions get deleted.
          # Defaults to false.
          # Cannot be used with `num-old-versions-to-delete`.
          #delete-only-untagged-versions: true

          # The token used to authenticate with GitHub Packages.
          # Defaults to github.token.
          # Required if the repo running the workflow does not have access to delete the package.
          #   For rubygems and maven package, repo has access if package is hosted in the same repo as the workflow.
          #   For container, npm and nuget package, repo has access if assigned **Admin** role under Package Settings > Manage Actions Access.
          #   If `package-version-ids` is given the token only needs the delete packages scope.
          #   If `package-version-ids` is not given the token needs the delete packages scope and the read packages scope
          #token: